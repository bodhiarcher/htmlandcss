/*SIMPLE SELECTORS (select elements based on name, id, class)*/
/*Here, all <p> elements on the page will be center-aligned, with a red text color*/
p {
  text-align: center;
  color: red;
}
/*The CSS rule below will be applied to the HTML element with id="id-selector"*/
#id-selector {
  text-align: center;
  color: red;
}
/*In this example all HTML elements with class="class-selector" will be red and center-aligned*/
.class-selector {
  text-align: center;
  color: red;

/*In this example only <p> elements with class="class-selector" will be center-aligned*/
p.class-selector {
  text-align: center;
  color: red;
}

/*The universal selector (*) selects all HTML elements on the page.*/
*universal {
  text-align: center;
  color: blue;
}
/*To group selectors, separate each selector with a comma*/
grouping, h1, h2, p {
  text-align: center;
  color: red;
}

Combinator selectors (select elements based on a specific relationship between them)
/*PSEUDO-CLASS SELECTORS (select elements based on a certain state of an element)

For example, it can be used to:
    Style an element when a user mouses over it
    Style visited and unvisited links differently
    Style an element when it gets focus*/

All CSS Pseudo Classes
Selector	Example	    Example description
:active	a:active	Selects the active link
:checked	input:checked	Selects every checked <input> element
:disabled	input:disabled	Selects every disabled <input> element
:empty	p:empty	Selects every <p> element that has no children
:enabled	input:enabled	Selects every enabled <input> element
:first-child	p:first-child	Selects every <p> elements that is the first child of its parent
:first-of-type	p:first-of-type	Selects every <p> element that is the first <p> element of its parent
:focus	input:focus	Selects the <input> element that has focus
:hover	a:hover	Selects links on mouse over
:in-range	input:in-range	Selects <input> elements with a value within a specified range
:invalid	input:invalid	Selects all <input> elements with an invalid value
:lang(language)	p:lang(it)	Selects every <p> element with a lang attribute value starting with "it"
:last-child	p:last-child	Selects every <p> elements that is the last child of its parent
:last-of-type	p:last-of-type	Selects every <p> element that is the last <p> element of its parent
:link	a:link	Selects all unvisited links
:not(selector)	:not(p)	Selects every element that is not a <p> element
:nth-child(n)	p:nth-child(2)	Selects every <p> element that is the second child of its parent
:nth-last-child(n)	p:nth-last-child(2)	Selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n)	p:nth-last-of-type(2)	Selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n)	p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent
:only-of-type	p:only-of-type	Selects every <p> element that is the only <p> element of its parent
:only-child	p:only-child	Selects every <p> element that is the only child of its parent
:optional	input:optional	Selects <input> elements with no "required" attribute
:out-of-range	input:out-of-range	Selects <input> elements with a value outside a specified range
:read-only	input:read-only	Selects <input> elements with a "readonly" attribute specified
:read-write	input:read-write	Selects <input> elements with no "readonly" attribute
:required	input:required	Selects <input> elements with a "required" attribute specified
:root	root	Selects the document's root element
:target	#news:target	Selects the current active #news element (clicked on a URL containing that anchor name)
:valid	input:valid	Selects all <input> elements with a valid value
:visited	a:visited	Selects all visited links

All CSS Pseudo Elements
Selector	Example	    Example description
::after	p::after	Insert content after every <p> element
::before	p::before	Insert content before every <p> element
::first-letter	p::first-letter	Selects the first letter of every <p> element
::first-line	p::first-line	Selects the first line of every <p> element
::selection	p::selection	Selects the portion of an element that is selected by a user

/*Pseudo-elements selectors (select and style a part of an element)*/ 
Attribute selectors (select elements based on an attribute or attribute value)